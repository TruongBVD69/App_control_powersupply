import tkinter as tk
import win32com.client
import speech_recognition as sr
from tkinter import messagebox

# K·∫øt n·ªëi t·ªõi Excel
try:
    excel = win32com.client.GetActiveObject("Excel.Application")
    excel.Visible = True
    wb = excel.ActiveWorkbook
    ws = excel.ActiveSheet
except Exception as e:
    messagebox.showerror("L·ªói", f"Kh√¥ng t√¨m th·∫•y Excel ho·∫∑c file ch∆∞a m·ªü:\n{e}")
    exit()

r = sr.Recognizer()

# T·ª´ ƒëi·ªÉn s·ªë ti·∫øng Vi·ªát c∆° b·∫£n
num_dict = {
    "kh√¥ng": "0", "m·ªôt": "1", "m·ªët": "1", "hai": "2", "ba": "3", "b·ªën": "4",
    "t∆∞": "4", "nƒÉm": "5", "lƒÉm": "5", "s√°u": "6", "b·∫£y": "7", "b·∫©y": "7",
    "t√°m": "8", "ch√≠n": "9",
}

def text_to_number(text):
    text = text.lower().strip()

    # Thay c√°c t·ª´ v√† d·∫•u ph·∫©y th·∫≠t th√†nh d·∫•u ch·∫•m
    for word in ["ch·∫•m", "ph·∫©y", "phay", "ph·∫£y", "d·∫•u ch·∫•m", "d·∫•u ph·∫©y", "d·∫•u phay"]:
        text = text.replace(word, ".")
    text = text.replace(",", ".")

    tokens = text.split()
    result_tokens = []
    for tok in tokens:
        if tok in num_dict:
            result_tokens.append(num_dict[tok])
        elif tok == ".":
            result_tokens.append(".")
        else:
            filtered = "".join(c for c in tok if c.isdigit() or c in [".", "-"])
            if filtered:
                result_tokens.append(filtered)

    # N·∫øu c√≥ nhi·ªÅu h∆°n 1 nh√≥m s·ªë m√† kh√¥ng c√≥ d·∫•u ch·∫•m ‚Üí b·ªè qua
    num_groups = [t for t in result_tokens if t != "."]
    if "." not in result_tokens and len(num_groups) > 1:
        print(f"‚ö† B·ªè qua v√¨ nhi·ªÅu nh√≥m s·ªë kh√¥ng c√≥ d·∫•u ch·∫•m: {result_tokens}")
        return None

    result = "".join(result_tokens)

    try:
        if result.count(".") <= 1 and result not in ["", ".", "-", "-.", ".-"]:
            if "." in result:
                final_value = float(result)
            else:
                final_value = int(result)
            return final_value
        else:
            return None
    except:
        return None



def listen_and_write():
    try:
        with sr.Microphone() as source:
            lbl_status.config(text="üé§ ƒêang nghe...")
            root.update_idletasks()
            audio = r.listen(source)

        text = r.recognize_google(audio, language="vi-VN").strip()
        lbl_status.config(text=f"B·∫°n n√≥i: {text}")
        print(f"B·∫°n n√≥i: {text}")  # Log ra console

        number = text_to_number(text)
        if number is not None:
            print(f"‚û° S·∫Ω ƒëi·ªÅn v√†o Excel: {number}")  # Log ra console
            ws.Application.ActiveCell.Value = number
            ws.Application.ActiveCell.Offset(0, 2).Select()
        else:
            lbl_status.config(text="Kh√¥ng nh·∫≠n d·∫°ng ƒë∆∞·ª£c s·ªë h·ª£p l·ªá!")

    except Exception as e:
        lbl_status.config(text=f"L·ªói: {e}")



# T·∫°o GUI
root = tk.Tk()
# C·ªë ƒë·ªãnh k√≠ch th∆∞·ªõc c·ª≠a s·ªï, v√≠ d·ª• 800x600
root.geometry("310x100")

# Kh√¥ng cho thay ƒë·ªïi k√≠ch th∆∞·ªõc (c·ªë ƒë·ªãnh c·∫£ chi·ªÅu ngang v√† d·ªçc)
root.resizable(True, True)
root.title("ƒêi·ªÅn Excel b·∫±ng gi·ªçng n√≥i")

lbl_status = tk.Label(root, text="Nh·∫•n n√∫t ƒë·ªÉ b·∫Øt ƒë·∫ßu n√≥i")
lbl_status.pack(padx=10, pady=10)

btn_listen = tk.Button(root, text="üé§ N√≥i", command=listen_and_write)
btn_listen.pack(padx=10, pady=10)

root.mainloop()

